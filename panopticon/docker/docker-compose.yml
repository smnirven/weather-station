name: panopticon
services:
  panopticon:
    build: 
      context: ../
      dockerfile: docker/Panopticon.Dockerfile
    command: /bin/sh -c "while sleep 1000; do :; done"  
    depends_on:
      timescaledb:
        condition: service_started
    environment:
      - PANOPTICON_HOST=192.168.50.75
    ports:
      - 8050:8050
    
  # You can include other services not opened by VS Code as well
  timescaledb:
    image: timescale/timescaledb-ha:pg16
    platform: linux/amd64
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=letmein
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes: 
      - timescale-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ../schema.sql:/docker-entrypoint-initdb.d/schema.sql
    # As in the "app" service, use "forwardPorts" in **devcontainer.json** to forward an app port locally.

  rabbitmq:
    build: 
      context: ../
      dockerfile: docker/MqttBroker.Dockerfile
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=letmein
    ports:
      - 1883:1883
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-logs:/var/log/rabbitmq
  consumer:
    build: 
      context: ../
      dockerfile: docker/Consumer.Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      timescaledb:
        condition: service_started
    restart: unless-stopped
volumes:
  timescale-data:
  rabbitmq-data:
  rabbitmq-logs:
